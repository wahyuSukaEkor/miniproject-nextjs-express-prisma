// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model EventOrganizer {
  eo_id      Int     @id @default(autoincrement())
  first_name String
  last_name  String
  email      String  @unique
  password   String
  Event      Event[]
}

model Participant {
  participant_id Int           @id @default(autoincrement())
  first_name     String
  last_name      String
  email          String        @unique
  password       String
  point_balance  Int           @default(0)
  point_exp      DateTime
  point_updated  DateTime      @updatedAt
  referral_code  String?
  Referral       Referral[]    @relation("Referrer")
  ReferredBy     Referral[]    @relation("Referred")
  Review         Review[]
  Transaction    Transaction[]


}

model EventCategory {
  id            Int     @id @default(autoincrement())
  category_name String
  Event         Event[]
}

model Event {
  event_id        Int              @id @default(autoincrement())
  eo_id           Int
  organizer       EventOrganizer   @relation(fields: [eo_id], references: [eo_id])
  event_name      String
  price           Decimal
  date            DateTime
  category_id     Int
  category        EventCategory    @relation(fields: [category_id], references: [id])
  EventStatistic  EventStatistic[]
  location        String
  description     String
  available_seat  Int
  ticket_types    String
  thumbnails_path String
  Review          Review[]
  Transaction     Transaction[]
}

model EventStatistic {
  id            Int     @id @default(autoincrement())
  event_id      Int
  event         Event   @relation(fields: [event_id], references: [event_id])
  ticket_sold   Int
  total_revenue Decimal
}

model Referral {
  id              Int          @id @default(autoincrement())
  referrer_id     Int
  referrer        Participant  @relation("Referrer", fields: [referrer_id], references: [participant_id])
  referred_id     Int
  referred        Participant  @relation("Referred", fields: [referred_id], references: [participant_id])
  created_at      DateTime     @default(now())
  expires_at      DateTime
}



model Review {
  id             Int         @id @default(autoincrement())
  event_id       Int
  event          Event       @relation(fields: [event_id], references: [event_id])
  participant_id Int
  participant    Participant @relation(fields: [participant_id], references: [participant_id])
  rating         Int
  comment        String
  created_at     DateTime    @default(now())
}

model Transaction {
  transaction_id Int         @id @default(autoincrement())
  participant_id Int
  participant    Participant @relation(fields: [participant_id], references: [participant_id])
  event_id       Int
  event          Event       @relation(fields: [event_id], references: [event_id])
  purchase_date  DateTime    @default(now())
  base_price     Decimal
  discount_used  Decimal?
  point_used     Int
  final_price    Decimal
}
